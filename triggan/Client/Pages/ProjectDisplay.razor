@page "/project/{slug}"
@inject HttpClient Http
@inject Task<ContentManager> contentManager

<section class="post">
    @if (project == null)
    {
        <p><em>Loading project data...</em></p>
    }
    else
    {
        @if (!string.IsNullOrEmpty(project.CoverImagePath))
        {
            <img class="" src="@project.CoverImagePath" alt="Project banner">
        }
        <h1>@project.Title</h1>
        <span class="small">@StateToString(project.State)</span>
        <p class="content">
            @((MarkupString)Markdig.Markdown.ToHtml(project.Excerpt))
        </p>
        @foreach (var update in project.Updates)
        {
            <div>
                <h3>@update.Title</h3>
                <span class="small">@update.Created</span>
                @((MarkupString)Markdig.Markdown.ToHtml(update.Content))
            </div>
        }
        <StarCounter Slug="@project.Slug" Type="Project" IsCounter="false" @bind-Count=@project.Stars />
        <br />
        <a href="/projects">Back</a>
    }
</section>

@code {
    private Project project;
    [Parameter]
    public string Slug { get; set; }

    protected override async Task OnInitializedAsync()
    {
        project = await (await contentManager).GetEntityAsync<Project>(Slug);
    }

    private string StateToString(Model.Enums.ProjectState state)
    {
        return state.ToString().Replace("_", " ");
    }
}
