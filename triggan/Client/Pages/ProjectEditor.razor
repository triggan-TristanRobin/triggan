@page "/project/edit"
@page "/project/edit/{Slug}"
@inject HttpClient Http

<section class="editor">
    @if (project == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <div class="row">
            <EditForm Model=@project OnSubmit="@UploadProject" class="form-group" style="width: 50%;">
                <div class="form-group">
                    <div>
                        <label for="Title">Title</label>
                        <KeystrokeTextInput @bind-Value=project.Title />
                    </div>
                    <div class="row" style="flex-wrap: wrap;padding-top: 0.5em;padding-bottom: 0.5em;">
                        <label for="Slug">Slug</label>
                        <InputText @bind-Value=project.Slug />
                        <label for="Public">Public</label>
                        <InputCheckbox @bind-Value=project.Public />
                    </div>
                    <div>
                        <label for="CoverImagePath">CoverImagePath</label>
                        <InputText @bind-Value=project.CoverImagePath />
                    </div>
                    <div>
                        <label for="PublicationDate">PublicationDate</label>
                        <InputDate @bind-Value=project.PublicationDate />
                    </div>
                </div>
                <div class="form-group">
                    <label for="Content">Post content</label>
                    <KeystrokeTextArea @bind-Value=project.Excerpt Rows="30" />
                </div>
                <button type="submit" class="">Submit</button>
            </EditForm>
            
            <div class="post" style="width: 50%;">
                <img class="" src="@project.CoverImagePath" alt="Project banner">
                <h1>@project.Title</h1>
                <span class="small">@project.State</span>
                @if (!string.IsNullOrEmpty(project.Excerpt))
                {
                    <p class="content">
                        @((MarkupString)Markdig.Markdown.ToHtml(project.Excerpt))
                    </p>
                }
            </div>
        </div>
        <a href="/blog">Back</a>
    }
</section>

@code {
    private Project project;
    [Parameter]
    public string Slug { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(Slug))
        {
            Console.WriteLine($"Trying to get post for edit");
            project = await Http.GetFromJsonAsync<Project>($"https://trigganfunctions.azurewebsites.net/api/Project/{Slug}");
        }
        else
        {
            Console.WriteLine($"New post");
            project = new Project();
            project.PublicationDate = DateTime.Today;
        }
    }

    private string result;
    private async Task UploadProject()
    {
        result = string.Empty;
        var success = await Http.PostAsJsonAsync($"https://trigganfunctions.azurewebsites.net/api/Project/{project.Slug}", project);
        Console.WriteLine(success);
        result = $"Your project is set in db";
    }

}
