@page "/work"

<div>
    <section>
        <h1>What can I do for You?</h1>
        <p>
            Whether you own a business, want to create a product or have a cool new idea that would solve some problem, it might be interesting to discuss about it!<br />
            My main skill is software development, specially using .NET, but I can also work more broadly depending on your needs! <br />
            I will always do my best to answer any question and help you for any kind of request.<br />
            You can check on my <a href="/now">now page</a> if my availability is clearly written, or reach out when it's not.
            Either way I'll always get back as soon as possible.
        </p>
        <p style="margin: 0 auto">
            Do you have
            <span class="need">@currentNeed</span>
            ?
        </p>
        <p>
            Then <a href="#contactme">contact me</a> to discuss our possibilities!<br />
            Some of my skills:
        </p>
        <div id="skillGrid" class="grid">
            @foreach (var skill in skills)
            {
                <div class="card skill-tile">
                    <span class="@($"{skill.Modifier ?? "fa"} fa-{skill.Icon}")"></span>
                    <span>@skill.Name</span>
                </div>
            }
        </div>
        <div id="contactme" class="card skill-tile" style="margin-left: auto;margin-right: auto">
            <span class="@($"{moreSkill.Modifier ?? "fa"} fa-{moreSkill.Icon}")"></span>
            @moreSkill.Name
        </div>
    </section>

    <section>
        <h3>What can you do with me?</h3>
        <p>
            I'm always working in some creative way, but I cannot do everything on my own.<br />
            If you want and can help me build something, don't wait and <a href="#contactme">contact me</a>!<br />
            <br />
            Whether it is for your own idea, to work on something new, or my ongoing projects, it would alway be nice to discuss!<br />
            <br />
            Here are the most recent updates on some of my work:<br />
        </p>
        <ProjectGrid ProjectCount="3" />
    </section>

    <ContactForm />
</div>

@code {
    class Skill
    {
        public string Icon { get; set; }
        public string Name { get; set; }
        public string Modifier { get; set; }
    }
    private Skill moreSkill = new Skill { Icon = "ellipsis-h", Name = "And more" };

    private Skill[] skills = new[]{
    new Skill { Icon = "terminal", Name = "Software" },
    new Skill { Icon = "visual-studio", Name = ".NET", Modifier = "fa-triggan" },
    new Skill { Icon = "gamepad", Name = "Video Games" },
    new Skill { Icon = "cubes", Name = "3D modeling" },
    new Skill { Icon = "users", Name = "Team Management" },
    new Skill { Icon = "camera", Name = "Video Edition", Modifier = "fa-solid" },
    };

    private string[] needs = {
    "a project Idea",
    "a need",
    "an app you would like to create",
    "cash",
    "an open position I would be the best for",
    "some needs you would like to discuss",
    "cookies",
    };
    private int index = 0;
    private string currentNeed;

    protected override async Task OnInitializedAsync()
    {
        currentNeed = needs[0];
        await ChangeRole();
        await base.OnInitializedAsync();
    }

    public async Task ChangeRole()
    {
        while (true)
        {
            await Task.Delay(2000);
            index = index == needs.Length - 1 ? 0 : index + 1;
            currentNeed += "|";
            await Task.Delay(100);
            for (int i = currentNeed.Length - 1; i >= 0; i--)
            {
                currentNeed = currentNeed.Substring(0, i) + "|";
                StateHasChanged();
                await Task.Delay(25);
            }
            await Task.Delay(500);
            for (int i = 1; i < needs[index].Length - 2; i++)
            {
                currentNeed = needs[index].Substring(0, i) + "|";
                StateHasChanged();
                await Task.Delay(25);
            }
            currentNeed = needs[index];
            StateHasChanged();
        }
    }
}